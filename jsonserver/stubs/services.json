[{
    "id": 906,
    "companyId": "1",
    "title": "Alpha",
    "description": "<h3>This is the description of the NEW alpha service.</h3><p>Some <b>bold</b> text!<br></p><p>Some <b>bold</b> text!<br></p><p>Some <b>bold</b> text!<br></p><p>Some <b>bold</b> text!<br></p><p>Some <b>bold</b> text!<br></p><p>Some <b>bold</b> text!<br></p><p>Some <b>bold</b> text!<br></p><p>Some <b>bold</b> text!<br></p><p>Some <b>bold</b> text!<br></p><p>Some <b>bold</b> text!<br></p>",
    "owner": "179",
    "profileId": "179",
    "releaseDate": "2017-01-20",
    "serviceType": "Fundamental Calculations - Fracture Mechanics",
    "tags": [],
    "specifications": "/services/3/specifications",
    "featureImage": {
        "thumbnail": "",
        "large": ""
    },
    "currentStatus": {
        "percentCompleted": "0",
        "startDate": "",
        "startTime": ""
    },
    "projectId": "147",
    "from": "marketplace",
    "type": "service",
    "parent": 906,
    "published": true,
    "averageRun": ""
}, {
    "id": 466,
    "companyId": "1",
    "title": "Alpha",
    "description": "The formula used in this model is Alpha = CrackLength / SpecimenWidth. The inputs are CrackLenght (meter) and SpecimenWidth (meter). The output is Alpha (no unit).",
    "owner": "179",
    "profileId": "179",
    "releaseDate": "2017-01-20",
    "serviceType": "Fundamental Calculations - Fracture Mechanics",
    "tags": [],
    "specifications": "/services/3/specifications",
    "featureImage": {
        "thumbnail": "",
        "large": ""
    },
    "currentStatus": {
        "percentCompleted": "0",
        "startDate": "",
        "startTime": ""
    },
    "projectId": "56",
    "from": "marketplace",
    "type": "service",
    "parent": null,
    "published": true,
    "averageRun": ""
}, {
    "id": 497,
    "companyId": "1",
    "title": "Beta Factor",
    "description": "The input is Alpha (no unit) and the output is BetaFactor (no unit). Below is some of the code used in\nthis model.\nTerm1 = 2 + Alpha\nTerm2 = pow((1 - Alpha), (3 / 2))\nTerm3 = 0.886 + 4.64 * Alpha - 13.32 * pow(Alpha, 2) + 14.72 * pow(Alpha, 3) - 5.6 * pow(Alpha, 4)\nBetaFactor = (Term1 / Term2) * Term3)",
    "owner": "179",
    "profileId": "179",
    "releaseDate": "2017-01-20",
    "serviceType": "Fundamental Calculations - Fracture Mechanics",
    "tags": [],
    "specifications": "/services/3/specifications",
    "featureImage": {
        "thumbnail": "",
        "large": ""
    },
    "currentStatus": {
        "percentCompleted": "0",
        "startDate": "",
        "startTime": ""
    },
    "projectId": "231",
    "from": "marketplace",
    "type": "service",
    "parent": 465,
    "published": true,
    "averageRun": ""
},
{
    "id": 498,
    "companyId": "1",
    "title": "K Max",
    "description": "The formula used is Kmax = BetaFactor * AppliedLoad / (Thickness * math.sqrt(SpecimenWidth.getValue())). The four inputs are BetaFactor (no unit), AppliedLoad (Newton), SpecimenWidth (meter), and Thickness (meter). The output is Kmax (pascal square root meter).",
    "owner": "179",
    "profileId": "179",
    "releaseDate": "2017-01-21",
    "serviceType": "Fundamental Calculations - Fracture Mechanics",
    "tags": [],
    "specifications": "/services/3/specifications",
    "featureImage": {
        "thumbnail": "",
        "large": ""
    },
    "currentStatus": {
        "percentCompleted": "0",
        "startDate": "",
        "startTime": ""
    },
    "projectId": "103",
    "from": "marketplace",
    "type": "service",
    "parent": null,
    "published": true,
    "averageRun": ""
}]
